%!PS-Adobe-3.0
%%Title: 
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 5/22/2007 17:24:59
%%For: bestrada
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (Generic PostScript Printer) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 18 521 260 784
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *PageSize Letter

    <</DeferredMediaSelection true /PageSize [612 792] /ImagingBBox null>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 300dpi

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 300 V 0 0 -72 300 V 18 784.00067 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 18 521 260 784
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
N 1 728 M 1 1091 I 999 1091 I 999 728 I 1 728 I C 
/DeviceGray dup setcolorspace /colspABC exch def
0.867 0 scol  O 0 0 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica-Bold
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
7500 VM?
/Helvetica-Bold FontHasEuro not
{
/Euro.Helvetica-Bold
 [556 0 12 -19 563 710 ] 
<97F8C00DDBF7240378F70401F774EA01F803EA01F8EAF70401F8BBF9011571B141BE278B
08FB278B303173FB32085906642C05DB0676078B828C828B82086206632C05E506A8FB3A
EC3EF71B8B08C18BC192B9A908F71407676C54754C8B083B8B6ED483C508F72C06B3EA05
FB5E06BB07F77106B3EA05FB91069AE5B2B9CC8B08C98BB26FA17408A07691828F830809
0E>
AddEuroGlyph
/Euro /Helvetica-Bold /Helvetica-Bold-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica-Bold mF 
/F0S30 F0 [48.43 0 0 -48.43 0 0 ] mFS
F0S30 Ji 
30 1066 M (Technical Innovation Model)[28 26 25 29 28 13 26 26 13 13 13 29 28 28 26 26 16 13 28 29 13 39 28 29 25  0]xS 
N 341 389 M 339 389 I 338 389 I 335 389 I 334 390 I 332 390 I 330 391 I 328 391 I 327 392 I 325 393 I 323 394 I 322 395 I 320 396 I 319 397 I 317 398 I 316 399 I 314 400 I 313 402 I 312 403 I 311 405 I 310 406 I 309 408 I 308 410 I 307 411 I 306 413 I 306 415 I 305 417 I 305 419 I 304 420 I 304 422 I 303 425 I 303 427 I 303 428 I 303 587 I 303 589 I 303 591 I 304 593 I 304 595 I 305 597 I 305 599 I 306 601 I 306 602 I 307 604 I 308 606 I 309 607 I 310 609 I 311 611 I 312 612 I 313 613 I 314 615 I 316 616 I 317 618 I 319 619 I 320 620 I 322 621 I 323 622 I 325 623 I 327 623 I 328 624 I 330 625 I 332 625 I 334 626 I 335 626 I 338 626 I 339 627 I 341 627 I 684 627 I 685 627 I 687 626 I 689 626 I 691 626 I 693 625 I 695 625 I 697 624 I 698 623 I 700 623 I 702 622 I 703 621 I 705 620 I 706 619 I 708 618 I 709 616 I 710 615 I 712 613 I 713 612 I 714 611 I 715 609 I 716 607 I 717 606 I 718 604 I 719 602 I 719 601 I 720 599 I 720 597 I 721 595 I 721 593 I 721 591 I 721 589 I 722 587 I 722 428 I 721 427 I 721 425 I 721 422 I 721 420 I 720 419 I 720 417 I 719 415 I 719 413 I 718 411 I 717 410 I 716 408 I 715 406 I 714 405 I 713 403 I 712 402 I 710 400 I 709 399 I 708 398 I 706 397 I 705 396 I 703 395 I 702 394 I 700 393 I 698 392 I 697 391 I 695 391 I 693 390 I 691 390 I 689 389 I 687 389 I 685 389 I 684 389 I 341 389 I C 
1 0 scol  O 0 0 scol 1 Lj 1 Lc 13 Lw solid N 341 389 M 339 389 I 338 389 I 335 389 I 334 390 I 332 390 I 330 391 I 328 391 I 327 392 I 325 393 I 323 394 I 322 395 I 320 396 I 319 397 I 317 398 I 316 399 I 314 400 I 313 402 I 312 403 I 311 405 I 310 406 I 309 408 I 308 410 I 307 411 I 306 413 I 306 415 I 305 417 I 305 419 I 304 420 I 304 422 I 303 425 I 303 427 I 303 428 I 303 587 I 303 589 I 303 591 I 304 593 I 304 595 I 305 597 I 305 599 I 306 601 I 306 602 I 307 604 I 308 606 I 309 607 I 310 609 I 311 611 I 312 612 I 313 613 I 314 615 I 316 616 I 317 618 I 319 619 I 320 620 I 322 621 I 323 622 I 325 623 I 327 623 I 328 624 I 330 625 I 332 625 I 334 626 I 335 626 I 338 626 I 339 627 I 341 627 I 684 627 I 685 627 I 687 626 I 689 626 I 691 626 I 693 625 I 695 625 I 697 624 I 698 623 I 700 623 I 702 622 I 703 621 I 705 620 I 706 619 I 708 618 I 709 616 I 710 615 I 712 613 I 713 612 I 714 611 I 715 609 I 716 607 I 717 606 I 718 604 I 719 602 I 719 601 I 720 599 I 720 597 I 721 595 I 721 593 I 721 591 I 721 589 I 722 587 I 722 428 I 721 427 I 721 425 I 721 422 I 721 420 I 720 419 I 720 417 I 719 415 I 719 413 I 718 411 I 717 410 I 716 408 I 715 406 I 714 405 I 713 403 I 712 402 I 710 400 I 709 399 I 708 398 I 706 397 I 705 396 I 703 395 I 702 394 I 700 393 I 698 392 I 697 391 I 695 391 I 693 390 I 691 390 I 689 389 I 687 389 I 685 389 I 684 389 I 341 389 I : 0.23 0.238 +S K 
; 
%%IncludeResource: font Helvetica
7500 VM?
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F1 0 /256 T /Helvetica mF 
/F1S30 F1 [48.43 0 0 -48.43 0 0 ] mFS
F1S30 Ji 
348 497 M (Arguments from)[30 16 26 26 38 26 26 13 23 13 13 15 26  0]xS 
354 555 M (legal precedent)[11 25 26 26 10 13 25 16 26 23 25 26 26 26  0]xS 
N 211 50 M 203 50 I 196 50 I 189 50 I 182 50 I 176 51 I 169 51 I 162 52 I 156 52 I 150 53 I 144 54 I 138 54 I 132 55 I 127 56 I 122 57 I 117 58 I 112 59 I 109 59 I 107 60 I 105 60 I 103 61 I 101 61 I 99 62 I 97 63 I 95 63 I 93 64 I 91 64 I 89 65 I 88 66 I 86 66 I 85 67 I 83 68 I 82 68 I 81 69 I 79 70 I 78 70 I 77 71 I 76 72 I 75 72 I 75 73 I 74 74 I 73 75 I 72 75 I 72 76 I 72 77 I 71 78 I 71 79 I 71 79 I 71 80 I 71 262 I 71 263 I 71 263 I 71 264 I 72 265 I 72 265 I 72 266 I 73 267 I 74 268 I 75 269 I 75 269 I 76 270 I 77 271 I 78 272 I 79 272 I 81 273 I 82 273 I 83 274 I 85 275 I 86 275 I 88 276 I 89 277 I 91 277 I 93 278 I 95 279 I 97 279 I 99 280 I 101 280 I 103 281 I 105 281 I 107 282 I 109 283 I 112 283 I 117 284 I 122 285 I 127 286 I 132 287 I 138 288 I 144 288 I 150 289 I 156 290 I 162 290 I 169 291 I 175 291 I 182 291 I 189 292 I 196 292 I 203 292 I 210 292 I 217 292 I 225 292 I 232 292 I 238 291 I 245 291 I 252 291 I 258 290 I 265 290 I 271 289 I 277 288 I 283 288 I 288 287 I 294 286 I 299 285 I 304 284 I 309 283 I 311 283 I 314 282 I 316 281 I 318 281 I 320 280 I 322 280 I 324 279 I 326 279 I 328 278 I 330 277 I 331 277 I 333 276 I 335 275 I 336 275 I 338 274 I 339 273 I 340 273 I 341 272 I 342 272 I 344 271 I 345 270 I 345 269 I 346 269 I 347 268 I 348 267 I 348 266 I 349 265 I 349 265 I 349 264 I 350 263 I 350 263 I 350 262 I 350 80 I 350 79 I 350 79 I 349 78 I 349 77 I 349 76 I 348 75 I 348 75 I 347 74 I 346 73 I 345 72 I 345 72 I 344 71 I 342 70 I 341 70 I 340 69 I 339 68 I 338 68 I 336 67 I 335 66 I 333 66 I 331 65 I 330 64 I 328 64 I 326 63 I 324 63 I 322 62 I 320 61 I 318 61 I 316 60 I 314 60 I 311 59 I 309 59 I 304 58 I 299 57 I 294 56 I 288 55 I 283 54 I 277 54 I 271 53 I 265 52 I 258 52 I 252 51 I 245 51 I 238 50 I 232 50 I 225 50 I 217 50 I 210 50 I 211 50 I C 
1 0 scol  O N 71 80 M 71 81 I 71 82 I 71 82 I 72 83 I 72 84 I 72 85 I 73 86 I 74 86 I 75 87 I 75 88 I 76 88 I 77 89 I 78 90 I 79 91 I 81 91 I 82 92 I 83 93 I 85 93 I 86 94 I 88 95 I 89 95 I 91 96 I 93 96 I 95 97 I 97 98 I 99 98 I 101 99 I 103 99 I 105 100 I 107 101 I 109 101 I 112 102 I 117 102 I 122 103 I 127 104 I 132 105 I 138 106 I 144 107 I 150 107 I 156 108 I 162 109 I 169 109 I 175 110 I 182 110 I 189 110 I 196 110 I 203 110 I 210 110 I 217 110 I 225 110 I 232 110 I 238 110 I 245 110 I 252 109 I 258 109 I 265 108 I 271 107 I 277 107 I 283 106 I 288 105 I 294 104 I 299 103 I 304 102 I 309 102 I 311 101 I 314 101 I 316 100 I 318 99 I 320 99 I 322 98 I 324 98 I 326 97 I 328 96 I 330 96 I 331 95 I 333 95 I 335 94 I 336 93 I 338 93 I 339 92 I 340 91 I 341 91 I 342 90 I 344 89 I 345 88 I 345 88 I 346 87 I 347 86 I 348 86 I 348 85 I 349 84 I 349 83 I 349 82 I 350 82 I 350 81 I 350 80 I 350 79 I 350 79 I 349 78 I 349 77 I 349 76 I 348 75 I 348 75 I 347 74 I 346 73 I 345 72 I 345 72 I 344 71 I 342 70 I 341 70 I 340 69 I 339 68 I 338 68 I 336 67 I 335 66 I 333 66 I 331 65 I 330 64 I 328 64 I 326 63 I 324 63 I 322 62 I 320 61 I 318 61 I 316 60 I 314 60 I 311 59 I 309 59 I 304 58 I 299 57 I 294 56 I 288 55 I 283 54 I 277 54 I 271 53 I 265 52 I 258 52 I 252 51 I 245 51 I 238 50 I 232 50 I 225 50 I 217 50 I 210 50 I 203 50 I 196 50 I 189 50 I 182 50 I 176 51 I 169 51 I 162 52 I 156 52 I 150 53 I 144 54 I 138 54 I 132 55 I 127 56 I 122 57 I 117 58 I 112 59 I 109 59 I 107 60 I 105 60 I 103 61 I 101 61 I 99 62 I 97 63 I 95 63 I 93 64 I 91 64 I 89 65 I 88 66 I 86 66 I 85 67 I 83 68 I 82 68 I 81 69 I 79 70 I 78 70 I 77 71 I 76 72 I 75 72 I 75 73 I 74 74 I 73 75 I 72 75 I 72 76 I 72 77 I 71 78 I 71 79 I 71 79 I 71 80 I 71 80 I C 
 O 0 0 scol N 211 50 M 203 50 I 196 50 I 189 50 I 182 50 I 176 51 I 169 51 I 162 52 I 156 52 I 150 53 I 144 54 I 138 54 I 132 55 I 127 56 I 122 57 I 117 58 I 112 59 I 109 59 I 107 60 I 105 60 I 103 61 I 101 61 I 99 62 I 97 63 I 95 63 I 93 64 I 91 64 I 89 65 I 88 66 I 86 66 I 85 67 I 83 68 I 82 68 I 81 69 I 79 70 I 78 70 I 77 71 I 76 72 I 75 72 I 75 73 I 74 74 I 73 75 I 72 75 I 72 76 I 72 77 I 71 78 I 71 79 I 71 79 I 71 80 I 71 262 I 71 263 I 71 263 I 71 264 I 72 265 I 72 265 I 72 266 I 73 267 I 74 268 I 75 269 I 75 269 I 76 270 I 77 271 I 78 272 I 79 272 I 81 273 I 82 273 I 83 274 I 85 275 I 86 275 I 88 276 I 89 277 I 91 277 I 93 278 I 95 279 I 97 279 I 99 280 I 101 280 I 103 281 I 105 281 I 107 282 I 109 283 I 112 283 I 117 284 I 122 285 I 127 286 I 132 287 I 138 288 I 144 288 I 150 289 I 156 290 I 162 290 I 169 291 I 175 291 I 182 291 I 189 292 I 196 292 I 203 292 I 210 292 I 217 292 I 225 292 I 232 292 I 238 291 I 245 291 I 252 291 I 258 290 I 265 290 I 271 289 I 277 288 I 283 288 I 288 287 I 294 286 I 299 285 I 304 284 I 309 283 I 311 283 I 314 282 I 316 281 I 318 281 I 320 280 I 322 280 I 324 279 I 326 279 I 328 278 I 330 277 I 331 277 I 333 276 I 335 275 I 336 275 I 338 274 I 339 273 I 340 273 I 341 272 I 342 272 I 344 271 I 345 270 I 345 269 I 346 269 I 347 268 I 348 267 I 348 266 I 349 265 I 349 265 I 349 264 I 350 263 I 350 263 I 350 262 I 350 80 I 350 79 I 350 79 I 349 78 I 349 77 I 349 76 I 348 75 I 348 75 I 347 74 I 346 73 I 345 72 I 345 72 I 344 71 I 342 70 I 341 70 I 340 69 I 339 68 I 338 68 I 336 67 I 335 66 I 333 66 I 331 65 I 330 64 I 328 64 I 326 63 I 324 63 I 322 62 I 320 61 I 318 61 I 316 60 I 314 60 I 311 59 I 309 59 I 304 58 I 299 57 I 294 56 I 288 55 I 283 54 I 277 54 I 271 53 I 265 52 I 258 52 I 252 51 I 245 51 I 238 50 I 232 50 I 225 50 I 217 50 I 210 50 I 211 50 I : 0.23 0.238 +S K 
; N 71 80 M 71 81 I 71 82 I 71 82 I 72 83 I 72 84 I 72 85 I 73 86 I 74 86 I 75 87 I 75 88 I 76 88 I 77 89 I 78 90 I 79 91 I 81 91 I 82 92 I 83 93 I 85 93 I 86 94 I 88 95 I 89 95 I 91 96 I 93 96 I 95 97 I 97 98 I 99 98 I 101 99 I 103 99 I 105 100 I 107 101 I 109 101 I 112 102 I 117 102 I 122 103 I 127 104 I 132 105 I 138 106 I 144 107 I 150 107 I 156 108 I 162 109 I 169 109 I 175 110 I 182 110 I 189 110 I 196 110 I 203 110 I 210 110 I 217 110 I 225 110 I 232 110 I 238 110 I 245 110 I 252 109 I 258 109 I 265 108 I 271 107 I 277 107 I 283 106 I 288 105 I 294 104 I 299 103 I 304 102 I 309 102 I 311 101 I 314 101 I 316 100 I 318 99 I 320 99 I 322 98 I 324 98 I 326 97 I 328 96 I 330 96 I 331 95 I 333 95 I 335 94 I 336 93 I 338 93 I 339 92 I 340 91 I 341 91 I 342 90 I 344 89 I 345 88 I 345 88 I 346 87 I 347 86 I 348 86 I 348 85 I 349 84 I 349 83 I 349 82 I 350 82 I 350 81 I 350 80 I : 0.23 0.238 +S K 
; 154 173 M (Legal)[26 25 26 26  0]xS 
124 232 M (archives)[26 16 23 25 11 23 26  0]xS 
N 745 752 M 738 752 I 730 752 I 723 752 I 717 753 I 710 753 I 703 753 I 697 754 I 691 754 I 684 755 I 678 756 I 672 757 I 667 757 I 661 758 I 656 759 I 651 760 I 646 761 I 644 761 I 641 762 I 639 763 I 637 763 I 635 764 I 633 764 I 631 765 I 629 766 I 627 766 I 625 767 I 624 767 I 622 768 I 621 769 I 619 769 I 618 770 I 616 771 I 615 771 I 614 772 I 613 773 I 612 773 I 611 774 I 610 775 I 609 775 I 608 776 I 608 777 I 607 778 I 606 779 I 606 779 I 606 780 I 605 781 I 605 782 I 605 782 I 605 964 I 605 965 I 605 966 I 606 966 I 606 967 I 606 968 I 607 969 I 608 969 I 608 970 I 609 971 I 610 972 I 611 972 I 612 973 I 613 974 I 614 975 I 615 975 I 616 976 I 618 976 I 619 977 I 621 978 I 622 978 I 624 979 I 625 980 I 627 980 I 629 981 I 631 982 I 633 982 I 635 983 I 637 983 I 639 984 I 641 984 I 644 985 I 646 985 I 651 986 I 656 987 I 661 988 I 667 989 I 672 990 I 678 991 I 684 991 I 691 992 I 697 992 I 703 993 I 710 993 I 717 994 I 723 994 I 730 994 I 737 994 I 745 994 I 752 994 I 759 994 I 766 994 I 773 994 I 780 993 I 786 993 I 793 992 I 799 992 I 805 991 I 811 991 I 817 990 I 823 989 I 828 988 I 833 987 I 838 986 I 843 985 I 846 985 I 848 984 I 850 984 I 852 983 I 855 983 I 856 982 I 858 982 I 860 981 I 862 980 I 864 980 I 866 979 I 867 978 I 869 978 I 870 977 I 872 976 I 873 976 I 875 975 I 876 975 I 877 974 I 878 973 I 879 972 I 880 972 I 881 971 I 881 970 I 882 969 I 883 969 I 883 968 I 883 967 I 884 966 I 884 966 I 884 965 I 884 964 I 884 782 I 884 782 I 884 781 I 884 780 I 883 779 I 883 779 I 883 778 I 882 777 I 881 776 I 881 775 I 880 775 I 879 774 I 878 773 I 877 773 I 876 772 I 875 771 I 873 771 I 872 770 I 870 769 I 869 769 I 867 768 I 866 767 I 864 767 I 862 766 I 860 766 I 858 765 I 856 764 I 855 764 I 852 763 I 850 763 I 848 762 I 846 761 I 843 761 I 838 760 I 833 759 I 828 758 I 823 757 I 817 757 I 811 756 I 805 755 I 799 754 I 793 754 I 786 753 I 779 753 I 773 753 I 766 752 I 759 752 I 752 752 I 745 752 I 745 752 I C 
1 0 scol  O N 605 782 M 605 783 I 605 784 I 606 785 I 606 785 I 606 786 I 607 787 I 608 788 I 608 789 I 609 789 I 610 790 I 611 791 I 612 791 I 613 792 I 614 793 I 615 793 I 616 794 I 618 795 I 619 796 I 621 796 I 622 797 I 624 798 I 625 798 I 627 799 I 629 799 I 631 800 I 633 800 I 635 801 I 637 802 I 639 802 I 641 803 I 644 803 I 646 804 I 651 805 I 656 806 I 661 807 I 667 807 I 672 808 I 678 809 I 684 810 I 691 810 I 697 811 I 703 811 I 710 812 I 717 812 I 723 812 I 730 813 I 737 813 I 745 813 I 752 813 I 759 813 I 766 812 I 773 812 I 780 812 I 786 811 I 793 811 I 799 810 I 805 810 I 811 809 I 817 808 I 823 807 I 828 807 I 833 806 I 838 805 I 843 804 I 846 803 I 848 803 I 850 802 I 852 802 I 855 801 I 856 800 I 858 800 I 860 799 I 862 799 I 864 798 I 866 798 I 867 797 I 869 796 I 870 796 I 872 795 I 873 794 I 875 793 I 876 793 I 877 792 I 878 791 I 879 791 I 880 790 I 881 789 I 881 789 I 882 788 I 883 787 I 883 786 I 883 785 I 884 785 I 884 784 I 884 783 I 884 782 I 884 782 I 884 781 I 884 780 I 883 779 I 883 779 I 883 778 I 882 777 I 881 776 I 881 775 I 880 775 I 879 774 I 878 773 I 877 773 I 876 772 I 875 771 I 873 771 I 872 770 I 870 769 I 869 769 I 867 768 I 866 767 I 864 767 I 862 766 I 860 766 I 858 765 I 856 764 I 855 764 I 852 763 I 850 763 I 848 762 I 846 761 I 843 761 I 838 760 I 833 759 I 828 758 I 823 757 I 817 757 I 811 756 I 805 755 I 799 754 I 793 754 I 786 753 I 779 753 I 773 753 I 766 752 I 759 752 I 752 752 I 745 752 I 738 752 I 730 752 I 723 752 I 717 753 I 710 753 I 703 753 I 697 754 I 691 754 I 684 755 I 678 756 I 672 757 I 667 757 I 661 758 I 656 759 I 651 760 I 646 761 I 644 761 I 641 762 I 639 763 I 637 763 I 635 764 I 633 764 I 631 765 I 629 766 I 627 766 I 625 767 I 624 767 I 622 768 I 621 769 I 619 769 I 618 770 I 616 771 I 615 771 I 614 772 I 613 773 I 612 773 I 611 774 I 610 775 I 609 775 I 608 776 I 608 777 I 607 778 I 606 779 I 606 779 I 606 780 I 605 781 I 605 782 I 605 782 I C 
 O 0 0 scol N 745 752 M 738 752 I 730 752 I 723 752 I 717 753 I 710 753 I 703 753 I 697 754 I 691 754 I 684 755 I 678 756 I 672 757 I 667 757 I 661 758 I 656 759 I 651 760 I 646 761 I 644 761 I 641 762 I 639 763 I 637 763 I 635 764 I 633 764 I 631 765 I 629 766 I 627 766 I 625 767 I 624 767 I 622 768 I 621 769 I 619 769 I 618 770 I 616 771 I 615 771 I 614 772 I 613 773 I 612 773 I 611 774 I 610 775 I 609 775 I 608 776 I 608 777 I 607 778 I 606 779 I 606 779 I 606 780 I 605 781 I 605 782 I 605 782 I 605 964 I 605 965 I 605 966 I 606 966 I 606 967 I 606 968 I 607 969 I 608 969 I 608 970 I 609 971 I 610 972 I 611 972 I 612 973 I 613 974 I 614 975 I 615 975 I 616 976 I 618 976 I 619 977 I 621 978 I 622 978 I 624 979 I 625 980 I 627 980 I 629 981 I 631 982 I 633 982 I 635 983 I 637 983 I 639 984 I 641 984 I 644 985 I 646 985 I 651 986 I 656 987 I 661 988 I 667 989 I 672 990 I 678 991 I 684 991 I 691 992 I 697 992 I 703 993 I 710 993 I 717 994 I 723 994 I 730 994 I 737 994 I 745 994 I 752 994 I 759 994 I 766 994 I 773 994 I 780 993 I 786 993 I 793 992 I 799 992 I 805 991 I 811 991 I 817 990 I 823 989 I 828 988 I 833 987 I 838 986 I 843 985 I 846 985 I 848 984 I 850 984 I 852 983 I 855 983 I 856 982 I 858 982 I 860 981 I 862 980 I 864 980 I 866 979 I 867 978 I 869 978 I 870 977 I 872 976 I 873 976 I 875 975 I 876 975 I 877 974 I 878 973 I 879 972 I 880 972 I 881 971 I 881 970 I 882 969 I 883 969 I 883 968 I 883 967 I 884 966 I 884 966 I 884 965 I 884 964 I 884 782 I 884 782 I 884 781 I 884 780 I 883 779 I 883 779 I 883 778 I 882 777 I 881 776 I 881 775 I 880 775 I 879 774 I 878 773 I 877 773 I 876 772 I 875 771 I 873 771 I 872 770 I 870 769 I 869 769 I 867 768 I 866 767 I 864 767 I 862 766 I 860 766 I 858 765 I 856 764 I 855 764 I 852 763 I 850 763 I 848 762 I 846 761 I 843 761 I 838 760 I 833 759 I 828 758 I 823 757 I 817 757 I 811 756 I 805 755 I 799 754 I 793 754 I 786 753 I 779 753 I 773 753 I 766 752 I 759 752 I 752 752 I 745 752 I 745 752 I : 0.23 0.238 +S K 
; N 605 782 M 605 783 I 605 784 I 606 785 I 606 785 I 606 786 I 607 787 I 608 788 I 608 789 I 609 789 I 610 790 I 611 791 I 612 791 I 613 792 I 614 793 I 615 793 I 616 794 I 618 795 I 619 796 I 621 796 I 622 797 I 624 798 I 625 798 I 627 799 I 629 799 I 631 800 I 633 800 I 635 801 I 637 802 I 639 802 I 641 803 I 644 803 I 646 804 I 651 805 I 656 806 I 661 807 I 667 807 I 672 808 I 678 809 I 684 810 I 691 810 I 697 811 I 703 811 I 710 812 I 717 812 I 723 812 I 730 813 I 737 813 I 745 813 I 752 813 I 759 813 I 766 812 I 773 812 I 780 812 I 786 811 I 793 811 I 799 810 I 805 810 I 811 809 I 817 808 I 823 807 I 828 807 I 833 806 I 838 805 I 843 804 I 846 803 I 848 803 I 850 802 I 852 802 I 855 801 I 856 800 I 858 800 I 860 799 I 862 799 I 864 798 I 866 798 I 867 797 I 869 796 I 870 796 I 872 795 I 873 794 I 875 793 I 876 793 I 877 792 I 878 791 I 879 791 I 880 790 I 881 789 I 881 789 I 882 788 I 883 787 I 883 786 I 883 785 I 884 785 I 884 784 I 884 783 I 884 782 I : 0.23 0.238 +S K 
; 656 876 M (State)[31 13 26 13  0]xS 
764 876 M (-)S 
780 876 M (of)[26  0]xS 
819 876 M (-)S 
677 934 M (the)[13 26  0]xS 
742 934 M (-)S 
757 934 M (art)[26 16  0]xS 
1 Lw solid N 605 878 M 603 878 I 601 877 I 598 877 I 595 876 I 593 875 I 591 874 I 588 873 I 586 872 I 584 870 I 581 868 I 579 867 I 577 865 I 575 862 I 572 860 I 572 860 I 579 854 I 579 854 I 580 856 I 582 858 I 584 859 I 586 861 I 588 862 I 590 864 I 592 865 I 594 866 I 596 867 I 598 867 I 600 868 I 602 868 I 603 869 I 605 869 I 605 878 I C 
556 837 M 556 837 I 554 834 I 552 830 I 550 826 I 548 822 I 546 819 I 544 815 I 543 811 I 541 806 I 540 804 I 548 801 I 549 803 I 551 807 I 552 811 I 554 815 I 556 818 I 558 822 I 559 825 I 561 829 I 563 832 I 563 833 I 556 837 I C 
531 778 M 528 770 I 526 760 I 523 750 I 521 743 I 530 741 I 531 748 I 534 758 I 536 767 I 539 776 I 531 778 I C 
516 716 M 514 707 I 513 696 I 511 684 I 511 680 I 520 679 I 520 683 I 521 694 I 523 705 I 524 715 I 516 716 I C 
509 653 M 509 650 I 508 638 I 508 636 I 517 635 I 517 638 I 517 649 I 517 652 I 509 653 I C 
494 661 M 513 627 I 532 660 I 532 661 I 533 662 I 533 663 I 532 664 I 532 665 I 532 665 I 531 666 I 530 666 I 529 667 I 529 667 I 528 667 I 527 667 I 526 667 I 526 666 I 525 666 I 524 665 I 509 638 I 516 638 I 501 665 I 501 666 I 500 666 I 500 667 I 499 667 I 498 667 I 497 667 I 496 667 I 496 667 I 495 666 I 494 666 I 494 665 I 493 664 I 493 663 I 493 662 I 493 662 I 494 661 I 494 661 I C 
:  L ; K 
N 350 169 M 354 169 I 358 169 I 362 170 I 362 170 I 362 170 I 362 170 I 363 170 I 363 171 I 363 171 I 363 171 I 363 172 I 363 172 I 363 172 I 363 173 I 363 173 I 363 173 I 362 173 I 362 174 I 362 174 I 361 174 I 361 174 I 357 173 I 354 173 I 350 173 I 349 173 I 349 173 I 349 172 I 349 172 I 348 172 I 348 172 I 348 171 I 348 171 I 348 171 I 348 170 I 348 170 I 349 170 I 349 169 I 349 169 I 349 169 I 350 169 I 350 169 I C 
377 173 M 381 174 I 385 175 I 388 177 I 388 177 I 389 177 I 389 177 I 389 177 I 389 178 I 390 178 I 390 179 I 390 179 I 389 179 I 389 180 I 389 180 I 389 180 I 388 180 I 388 180 I 388 180 I 387 180 I 387 180 I 387 180 I 387 180 I 383 179 I 380 178 I 376 177 I 376 177 I 375 176 I 375 176 I 375 176 I 375 175 I 375 175 I 375 175 I 375 174 I 375 174 I 375 173 I 375 173 I 376 173 I 376 173 I 376 173 I 377 173 I 377 173 I 377 173 I C 
403 183 M 403 184 I 407 186 I 411 188 I 413 189 I 413 190 I 413 190 I 414 190 I 414 191 I 414 191 I 414 191 I 414 192 I 414 192 I 413 193 I 413 193 I 413 193 I 412 193 I 412 193 I 411 193 I 411 193 I 411 193 I 408 191 I 405 189 I 401 187 I 401 187 I 401 187 I 400 187 I 400 186 I 400 186 I 400 185 I 400 185 I 400 185 I 400 184 I 400 184 I 401 184 I 401 183 I 401 183 I 401 183 I 402 183 I 402 183 I 403 183 I 403 183 I C 
426 199 M 428 201 I 432 203 I 435 206 I 435 207 I 435 207 I 435 207 I 435 208 I 435 208 I 435 209 I 435 209 I 435 209 I 435 210 I 434 210 I 434 210 I 434 210 I 433 210 I 433 210 I 433 210 I 432 210 I 429 207 I 426 204 I 423 202 I 423 202 I 423 201 I 423 201 I 423 201 I 423 200 I 423 200 I 423 199 I 423 199 I 423 199 I 424 199 I 424 198 I 424 198 I 425 198 I 425 198 I 425 198 I 426 199 I 426 199 I C 
446 218 M 448 219 I 451 223 I 454 226 I 454 227 I 454 227 I 455 228 I 455 228 I 455 228 I 454 229 I 454 229 I 454 229 I 454 230 I 453 230 I 453 230 I 453 230 I 452 230 I 452 230 I 451 230 I 451 229 I 448 226 I 445 222 I 444 220 I 443 220 I 443 220 I 443 219 I 443 219 I 443 219 I 443 218 I 443 218 I 444 218 I 444 217 I 444 217 I 444 217 I 445 217 I 445 217 I 446 217 I 446 217 I 446 218 I 446 218 I C 
464 239 M 469 246 I 471 249 I 471 249 I 471 250 I 471 250 I 471 250 I 471 251 I 471 251 I 471 252 I 470 252 I 470 252 I 470 252 I 469 252 I 469 252 I 469 252 I 468 252 I 468 252 I 468 251 I 466 248 I 461 241 I 461 241 I 461 241 I 461 241 I 461 240 I 461 240 I 461 239 I 461 239 I 461 239 I 462 239 I 462 238 I 463 238 I 463 238 I 463 238 I 464 239 I 464 239 I 464 239 I 464 239 I C 
480 263 M 484 271 I 485 273 I 485 274 I 486 274 I 485 274 I 485 275 I 485 275 I 485 275 I 485 276 I 484 276 I 484 276 I 484 276 I 483 276 I 483 276 I 483 276 I 482 276 I 482 276 I 482 275 I 481 273 I 476 265 I 476 264 I 476 264 I 476 264 I 476 263 I 476 263 I 476 263 I 477 262 I 477 262 I 477 262 I 478 262 I 478 262 I 478 262 I 479 262 I 479 262 I 479 262 I 480 263 I 480 263 I C 
492 288 M 493 289 I 497 299 I 497 299 I 497 299 I 497 300 I 497 300 I 497 301 I 497 301 I 497 301 I 496 302 I 496 302 I 495 302 I 495 302 I 495 302 I 494 302 I 494 302 I 494 301 I 493 301 I 493 301 I 493 300 I 489 291 I 489 289 I 489 289 I 489 289 I 489 288 I 489 288 I 489 288 I 489 287 I 489 287 I 490 287 I 490 287 I 490 287 I 491 287 I 491 287 I 491 287 I 492 287 I 492 288 I 492 288 I 492 288 I C 
502 314 M 503 318 I 505 323 I 506 326 I 506 326 I 506 327 I 506 327 I 506 327 I 505 328 I 505 328 I 505 328 I 504 328 I 504 328 I 504 328 I 503 328 I 503 328 I 503 328 I 502 328 I 502 327 I 502 327 I 501 324 I 500 319 I 499 316 I 499 315 I 499 315 I 499 314 I 499 314 I 499 314 I 499 313 I 500 313 I 500 313 I 500 313 I 501 313 I 501 313 I 501 313 I 502 313 I 502 314 I 502 314 I 502 314 I 502 314 I C 
510 342 M 510 343 I 511 348 I 512 353 I 512 354 I 512 354 I 512 355 I 511 355 I 511 355 I 511 356 I 511 356 I 510 356 I 510 356 I 510 356 I 509 356 I 509 356 I 509 356 I 508 355 I 508 355 I 508 355 I 508 354 I 508 354 I 507 349 I 506 344 I 506 342 I 506 342 I 506 342 I 506 342 I 506 341 I 506 341 I 506 341 I 507 340 I 507 340 I 508 340 I 508 340 I 508 340 I 509 341 I 509 341 I 509 341 I 509 341 I 510 342 I 510 342 I C 
513 370 M 514 373 I 514 379 I 514 381 I 514 381 I 514 381 I 514 382 I 514 382 I 513 382 I 513 383 I 513 383 I 512 383 I 512 383 I 512 383 I 511 382 I 511 382 I 511 382 I 510 382 I 510 381 I 510 381 I 510 379 I 510 374 I 510 370 I 510 370 I 510 369 I 510 369 I 510 369 I 510 368 I 511 368 I 511 368 I 511 368 I 512 368 I 512 368 I 513 368 I 513 369 I 513 369 I 513 369 I 513 370 I 513 370 I 513 370 I C 
527 357 M 512 385 I 497 358 I 497 357 I 496 357 I 496 357 I 496 357 I 497 356 I 497 356 I 497 355 I 497 355 I 498 355 I 498 355 I 498 355 I 499 355 I 499 355 I 499 355 I 500 356 I 500 356 I 514 380 I 511 380 I 524 355 I 524 355 I 524 355 I 524 355 I 525 354 I 525 354 I 526 354 I 526 354 I 526 355 I 527 355 I 527 355 I 527 355 I 527 356 I 527 356 I 527 357 I 527 357 I 527 357 I 527 357 I C 
:  L ; K 
N 885 848 M 893 851 I 893 851 I 894 851 I 894 852 I 894 852 I 894 853 I 893 853 I 892 853 I 892 853 I 892 853 I 884 851 I 883 850 I 883 850 I 883 850 I 883 849 I 883 849 I 883 849 I 883 848 I 883 848 I 884 848 I 884 847 I 885 847 I 885 848 I 885 848 I C 
904 855 M 910 857 I 912 858 I 913 858 I 913 859 I 913 859 I 913 859 I 913 860 I 912 860 I 912 860 I 911 860 I 911 860 I 909 859 I 903 857 I 902 857 I 902 857 I 902 856 I 902 856 I 902 855 I 902 855 I 902 855 I 903 855 I 903 854 I 904 854 I 904 855 I 904 855 I C 
923 862 M 925 863 I 928 864 I 931 866 I 931 866 I 932 866 I 932 867 I 932 867 I 931 868 I 931 868 I 931 868 I 930 868 I 930 868 I 927 867 I 924 866 I 922 865 I 921 864 I 921 864 I 921 864 I 921 863 I 921 863 I 921 863 I 921 862 I 922 862 I 922 862 I 923 862 I 923 862 I 923 862 I C 
942 871 M 943 872 I 944 873 I 945 874 I 947 875 I 949 876 I 949 876 I 949 877 I 950 877 I 949 878 I 949 878 I 949 878 I 949 879 I 948 879 I 947 879 I 947 879 I 947 879 I 947 879 I 947 879 I 946 877 I 944 876 I 943 875 I 942 875 I 940 874 I 940 873 I 939 873 I 939 872 I 939 872 I 940 872 I 940 871 I 940 871 I 941 871 I 941 871 I 942 871 I 942 871 I C 
956 886 M 957 887 I 958 889 I 959 891 I 960 892 I 961 894 I 961 894 I 961 895 I 961 896 I 960 896 I 960 896 I 959 896 I 959 896 I 958 896 I 957 894 I 956 892 I 955 890 I 954 889 I 954 888 I 954 887 I 954 887 I 954 886 I 954 886 I 954 886 I 955 886 I 955 886 I 956 886 I 956 886 I 956 886 I C 
968 903 M 969 904 I 971 907 I 973 909 I 974 910 I 974 910 I 974 911 I 974 911 I 974 912 I 973 912 I 973 912 I 973 913 I 972 913 I 972 913 I 971 912 I 971 911 I 969 909 I 967 906 I 966 905 I 966 905 I 966 904 I 966 903 I 966 903 I 966 903 I 967 903 I 967 903 I 968 903 I 968 903 I 968 903 I C 
981 919 M 985 925 I 987 926 I 987 927 I 987 927 I 987 928 I 987 928 I 986 929 I 986 929 I 986 929 I 985 929 I 985 929 I 984 928 I 983 927 I 979 921 I 979 921 I 979 920 I 979 920 I 979 919 I 979 919 I 980 919 I 980 919 I 981 919 I 981 919 I 981 919 I C 
994 936 M 996 938 I 1000 943 I 1000 943 I 1000 943 I 1000 944 I 1000 944 I 1000 945 I 999 945 I 999 945 I 998 945 I 998 945 I 997 945 I 994 940 I 992 938 I 992 937 I 992 937 I 992 936 I 992 936 I 992 935 I 993 935 I 993 935 I 994 935 I 994 936 I 994 936 I C 
:  L ; K 
N 837 1092 M 830 1088 I 830 1088 I 829 1087 I 829 1087 I 829 1086 I 829 1085 I 829 1085 I 830 1085 I 830 1085 I 831 1085 I 831 1085 I 831 1085 I 832 1086 I 838 1090 I 839 1090 I 839 1091 I 839 1091 I 839 1092 I 839 1092 I 838 1092 I 838 1093 I 838 1093 I 837 1093 I 837 1092 I 837 1092 I C 
820 1081 M 818 1079 I 813 1076 I 812 1075 I 812 1075 I 812 1074 I 812 1074 I 813 1073 I 813 1073 I 814 1073 I 814 1073 I 819 1077 I 822 1078 I 822 1079 I 822 1079 I 822 1080 I 822 1081 I 821 1081 I 821 1081 I 820 1081 I 820 1081 I 820 1081 I 820 1081 I C 
803 1068 M 803 1068 I 800 1065 I 797 1062 I 797 1062 I 797 1061 I 797 1061 I 797 1061 I 797 1060 I 797 1060 I 798 1059 I 798 1059 I 799 1059 I 799 1060 I 799 1060 I 802 1063 I 805 1065 I 805 1066 I 806 1066 I 806 1067 I 806 1068 I 806 1068 I 805 1068 I 805 1068 I 804 1068 I 803 1068 I 803 1068 I C 
789 1052 M 788 1050 I 786 1047 I 785 1045 I 784 1044 I 784 1044 I 784 1044 I 785 1043 I 785 1043 I 785 1042 I 786 1042 I 786 1042 I 787 1043 I 787 1043 I 788 1045 I 790 1048 I 792 1051 I 792 1051 I 792 1051 I 792 1052 I 792 1052 I 792 1053 I 791 1053 I 791 1053 I 790 1053 I 790 1053 I 789 1052 I 789 1052 I C 
779 1034 M 779 1033 I 776 1026 I 776 1025 I 776 1025 I 776 1024 I 776 1023 I 776 1023 I 777 1023 I 777 1023 I 777 1023 I 778 1023 I 778 1024 I 779 1024 I 779 1024 I 779 1025 I 782 1032 I 782 1032 I 782 1033 I 782 1034 I 782 1034 I 781 1034 I 781 1035 I 781 1035 I 780 1035 I 780 1034 I 779 1034 I 779 1034 I C 
772 1014 M 771 1010 I 769 1005 I 769 1005 I 769 1004 I 770 1004 I 770 1003 I 770 1003 I 771 1003 I 771 1003 I 772 1003 I 772 1004 I 772 1004 I 774 1009 I 775 1013 I 775 1013 I 775 1013 I 775 1014 I 775 1014 I 774 1014 I 774 1014 I 774 1015 I 774 1015 I 773 1015 I 773 1014 I 772 1014 I 772 1014 I 772 1014 I C 
:  L ; K 
: 0 155 68 33 rc N 1 169 M 1 169 I 2 169 I 2 169 I 3 169 I 4 169 I 5 169 I 6 169 I 7 169 I 9 169 I 10 169 I 12 169 I 13 169 I 13 169 I 14 169 I 14 169 I 14 170 I 14 170 I 15 170 I 15 171 I 15 171 I 15 171 I 15 172 I 14 172 I 14 172 I 14 172 I 14 173 I 13 173 I 13 173 I 12 173 I 10 173 I 9 173 I 7 173 I 6 173 I 5 173 I 4 173 I 3 173 I 2 173 I 2 173 I 1 173 I 1 173 I 1 173 I 0 173 I 0 172 I 0 172 I 0 172 I 0 172 I -1 171 I -1 171 I -1 171 I 0 170 I 0 170 I 0 170 I 0 169 I 0 169 I 1 169 I 1 169 I 1 169 I C 
28 169 M 31 169 I 34 169 I 39 169 I 40 169 I 40 169 I 41 169 I 41 169 I 41 170 I 42 170 I 42 170 I 42 171 I 42 171 I 42 171 I 42 172 I 42 172 I 41 172 I 41 172 I 41 173 I 40 173 I 40 173 I 39 173 I 34 173 I 31 173 I 28 173 I 28 173 I 28 173 I 27 172 I 27 172 I 27 172 I 27 172 I 26 171 I 26 171 I 26 171 I 27 170 I 27 170 I 27 170 I 27 169 I 28 169 I 28 169 I 28 169 I 28 169 I C 
56 169 M 58 169 I 63 169 I 64 169 I 64 169 I 64 169 I 65 170 I 65 170 I 65 170 I 65 171 I 65 171 I 65 171 I 65 172 I 65 172 I 65 172 I 64 172 I 64 173 I 64 173 I 63 173 I 58 173 I 56 173 I 55 173 I 55 173 I 54 172 I 54 172 I 54 172 I 54 172 I 54 171 I 54 171 I 54 171 I 54 170 I 54 170 I 54 170 I 54 169 I 55 169 I 55 169 I 56 169 I 56 169 I C 
41 155 M 67 171 I 41 187 I 41 187 I 40 187 I 40 187 I 40 187 I 39 187 I 39 187 I 39 186 I 38 186 I 38 186 I 38 185 I 38 185 I 38 185 I 38 184 I 39 184 I 39 184 I 39 183 I 62 169 I 62 173 I 39 158 I 39 158 I 39 158 I 38 158 I 38 157 I 38 157 I 38 156 I 38 156 I 38 156 I 39 156 I 39 155 I 39 155 I 40 155 I 40 155 I 40 155 I 41 155 I 41 155 I 41 155 I C 
:  L ; K 
; N 1000 512 M 741 512 I 740 512 I 740 512 I 740 512 I 740 512 I 739 511 I 739 511 I 739 510 I 739 510 I 739 510 I 739 509 I 739 509 I 740 509 I 740 508 I 740 508 I 740 508 I 741 508 I 1000 508 I 1001 508 I 1001 508 I 1001 508 I 1002 509 I 1002 509 I 1002 509 I 1002 510 I 1002 510 I 1002 510 I 1002 511 I 1002 511 I 1002 512 I 1001 512 I 1001 512 I 1001 512 I 1000 512 I 1000 512 I C 
745 522 M 722 510 I 745 498 I 745 522 I C 
:  L ; K 
13 Lw solid : 0 507 307 7 rc N 303 510 M 1 510 I : 0.23 0.238 +S K 
; ; : 0 0 1004 1095 rc N 1 2 M 1 1091 I 1000 1091 I 1000 2 I C 
: 0.23 0.238 +S K 
; ; F0S30 Ji 
518 65 M (Common Law Model)[34 28 41 42 28 29 13 28 26 37 13 38 29 28 26  0]xS 
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer
%%BoundingBox: 18 521 260 784
%%DocumentNeededResources: 
%%+ font Helvetica-Bold
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF
