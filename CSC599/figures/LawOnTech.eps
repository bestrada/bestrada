%!PS-Adobe-3.0
%%Title: 
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 5/22/2007 17:24:59
%%For: bestrada
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (Generic PostScript Printer) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 18 550 391 784
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *PageSize Letter

    <</DeferredMediaSelection true /PageSize [612 792] /ImagingBBox null>> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 300dpi

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 300 V 0 0 -72 300 V 18 784.00067 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 18 550 391 784
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
N 1 1 M 1 968 I 930 968 I 930 1 I 1 1 I C 
/DeviceGray dup setcolorspace /colspABC exch def
0.867 0 scol  O 0 0 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica-Bold
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
7500 VM?
/Helvetica-Bold FontHasEuro not
{
/Euro.Helvetica-Bold
 [556 0 12 -19 563 710 ] 
<97F8C00DDBF7240378F70401F774EA01F803EA01F8EAF70401F8BBF9011571B141BE278B
08FB278B303173FB32085906642C05DB0676078B828C828B82086206632C05E506A8FB3A
EC3EF71B8B08C18BC192B9A908F71407676C54754C8B083B8B6ED483C508F72C06B3EA05
FB5E06BB07F77106B3EA05FB91069AE5B2B9CC8B08C98BB26FA17408A07691828F830809
0E>
AddEuroGlyph
/Euro /Helvetica-Bold /Helvetica-Bold-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica-Bold mF 
/F0S30 F0 [48.336 0 0 -48.336 0 0 ] mFS
F0S30 Ji 
30 63 M (Technical Innovation Model)[29 27 26 30 29 13 26 27 13 13 14 29 29 29 27 26 16 14 29 29 14 39 30 29 26  0]xS 
N 183 199 M 181 199 I 179 199 I 177 200 I 175 200 I 173 200 I 172 201 I 170 202 I 168 202 I 166 203 I 165 204 I 163 205 I 162 206 I 160 207 I 158 208 I 157 210 I 156 211 I 154 212 I 153 214 I 152 215 I 151 217 I 150 218 I 149 220 I 148 222 I 147 223 I 147 225 I 146 227 I 146 229 I 145 231 I 145 233 I 144 235 I 144 237 I 144 239 I 144 397 I 144 399 I 144 401 I 145 403 I 145 405 I 146 407 I 146 409 I 147 410 I 147 412 I 148 414 I 149 416 I 150 417 I 151 419 I 152 421 I 153 422 I 154 423 I 156 425 I 157 426 I 158 427 I 160 429 I 162 430 I 163 431 I 165 432 I 166 432 I 168 433 I 170 434 I 172 435 I 173 435 I 175 436 I 177 436 I 179 436 I 181 436 I 183 437 I 534 437 I 536 436 I 538 436 I 540 436 I 542 436 I 544 435 I 546 435 I 547 434 I 549 433 I 551 432 I 553 432 I 554 431 I 556 430 I 557 429 I 559 427 I 560 426 I 562 425 I 563 423 I 564 422 I 565 421 I 566 419 I 567 417 I 568 416 I 569 414 I 570 412 I 571 410 I 571 409 I 572 407 I 572 405 I 573 403 I 573 401 I 573 399 I 573 397 I 573 239 I 573 237 I 573 235 I 573 233 I 572 231 I 572 229 I 571 227 I 571 225 I 570 223 I 569 222 I 568 220 I 567 218 I 566 217 I 565 215 I 564 214 I 563 212 I 562 211 I 560 210 I 559 208 I 557 207 I 556 206 I 554 205 I 553 204 I 551 203 I 549 202 I 547 202 I 546 201 I 544 200 I 542 200 I 540 200 I 538 199 I 536 199 I 534 199 I 183 199 I C 
1 0 scol  O 0 0 scol 1 Lj 1 Lc 13 Lw solid N 183 199 M 181 199 I 179 199 I 177 200 I 175 200 I 173 200 I 172 201 I 170 202 I 168 202 I 166 203 I 165 204 I 163 205 I 162 206 I 160 207 I 158 208 I 157 210 I 156 211 I 154 212 I 153 214 I 152 215 I 151 217 I 150 218 I 149 220 I 148 222 I 147 223 I 147 225 I 146 227 I 146 229 I 145 231 I 145 233 I 144 235 I 144 237 I 144 239 I 144 397 I 144 399 I 144 401 I 145 403 I 145 405 I 146 407 I 146 409 I 147 410 I 147 412 I 148 414 I 149 416 I 150 417 I 151 419 I 152 421 I 153 422 I 154 423 I 156 425 I 157 426 I 158 427 I 160 429 I 162 430 I 163 431 I 165 432 I 166 432 I 168 433 I 170 434 I 172 435 I 173 435 I 175 436 I 177 436 I 179 436 I 181 436 I 183 437 I 534 437 I 536 436 I 538 436 I 540 436 I 542 436 I 544 435 I 546 435 I 547 434 I 549 433 I 551 432 I 553 432 I 554 431 I 556 430 I 557 429 I 559 427 I 560 426 I 562 425 I 563 423 I 564 422 I 565 421 I 566 419 I 567 417 I 568 416 I 569 414 I 570 412 I 571 410 I 571 409 I 572 407 I 572 405 I 573 403 I 573 401 I 573 399 I 573 397 I 573 239 I 573 237 I 573 235 I 573 233 I 572 231 I 572 229 I 571 227 I 571 225 I 570 223 I 569 222 I 568 220 I 567 218 I 566 217 I 565 215 I 564 214 I 563 212 I 562 211 I 560 210 I 559 208 I 557 207 I 556 206 I 554 205 I 553 204 I 551 203 I 549 202 I 547 202 I 546 201 I 544 200 I 542 200 I 540 200 I 538 199 I 536 199 I 534 199 I 183 199 I : 0.234 0.238 +S K 
; 
%%IncludeResource: font Helvetica
7500 VM?
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F1 0 /256 T /Helvetica mF 
/F1S30 F1 [48.336 0 0 -48.336 0 0 ] mFS
F1S30 Ji 
227 307 M (Client needs)[34 11 10 26 27 13 13 27 26 26 26  0]xS 
233 365 M (functionality)[14 26 26 24 14 10 26 26 27 10 11 13  0]xS 
N 183 557 M 181 557 I 179 557 I 177 558 I 175 558 I 174 559 I 172 559 I 170 560 I 168 560 I 166 561 I 165 562 I 163 563 I 162 564 I 160 565 I 158 566 I 157 568 I 156 569 I 154 570 I 153 572 I 152 573 I 151 575 I 150 576 I 149 578 I 148 580 I 147 582 I 147 583 I 146 585 I 146 587 I 145 589 I 145 591 I 144 593 I 144 595 I 144 597 I 144 755 I 144 757 I 144 759 I 145 761 I 145 763 I 146 765 I 146 767 I 147 769 I 147 770 I 148 772 I 149 774 I 150 775 I 151 777 I 152 778 I 153 780 I 154 782 I 156 783 I 157 784 I 158 786 I 160 787 I 162 788 I 163 789 I 165 790 I 166 791 I 168 791 I 170 792 I 172 793 I 174 793 I 175 794 I 177 794 I 179 794 I 181 794 I 183 794 I 534 794 I 536 794 I 538 794 I 540 794 I 542 794 I 544 793 I 546 793 I 547 792 I 549 791 I 551 791 I 553 790 I 554 789 I 556 788 I 557 787 I 559 786 I 560 784 I 562 783 I 563 782 I 564 780 I 565 778 I 566 777 I 567 775 I 568 774 I 569 772 I 570 770 I 571 769 I 571 767 I 572 765 I 572 763 I 573 761 I 573 759 I 573 757 I 573 755 I 573 597 I 573 595 I 573 593 I 573 591 I 572 589 I 572 587 I 571 585 I 571 583 I 570 582 I 569 580 I 568 578 I 567 576 I 566 575 I 565 573 I 564 572 I 563 570 I 562 569 I 560 568 I 559 566 I 557 565 I 556 564 I 554 563 I 553 562 I 551 561 I 549 560 I 547 560 I 546 559 I 544 559 I 542 558 I 540 558 I 538 557 I 536 557 I 534 557 I 183 557 I C 
1 0 scol  O 0 0 scol N 183 557 M 181 557 I 179 557 I 177 558 I 175 558 I 174 559 I 172 559 I 170 560 I 168 560 I 166 561 I 165 562 I 163 563 I 162 564 I 160 565 I 158 566 I 157 568 I 156 569 I 154 570 I 153 572 I 152 573 I 151 575 I 150 576 I 149 578 I 148 580 I 147 582 I 147 583 I 146 585 I 146 587 I 145 589 I 145 591 I 144 593 I 144 595 I 144 597 I 144 755 I 144 757 I 144 759 I 145 761 I 145 763 I 146 765 I 146 767 I 147 769 I 147 770 I 148 772 I 149 774 I 150 775 I 151 777 I 152 778 I 153 780 I 154 782 I 156 783 I 157 784 I 158 786 I 160 787 I 162 788 I 163 789 I 165 790 I 166 791 I 168 791 I 170 792 I 172 793 I 174 793 I 175 794 I 177 794 I 179 794 I 181 794 I 183 794 I 534 794 I 536 794 I 538 794 I 540 794 I 542 794 I 544 793 I 546 793 I 547 792 I 549 791 I 551 791 I 553 790 I 554 789 I 556 788 I 557 787 I 559 786 I 560 784 I 562 783 I 563 782 I 564 780 I 565 778 I 566 777 I 567 775 I 568 774 I 569 772 I 570 770 I 571 769 I 571 767 I 572 765 I 572 763 I 573 761 I 573 759 I 573 757 I 573 755 I 573 597 I 573 595 I 573 593 I 573 591 I 572 589 I 572 587 I 571 585 I 571 583 I 570 582 I 569 580 I 568 578 I 567 576 I 566 575 I 565 573 I 564 572 I 563 570 I 562 569 I 560 568 I 559 566 I 557 565 I 556 564 I 554 563 I 553 562 I 551 561 I 549 560 I 547 560 I 546 559 I 544 559 I 542 558 I 540 558 I 538 557 I 536 557 I 534 557 I 183 557 I : 0.234 0.238 +S K 
; 211 636 M (Requirements)[34 27 26 26 10 16 27 39 27 26 13  0]xS 
243 694 M (and design)[26 26 27 13 26 27 24 10 26  0]xS 
282 752 M (laid out)[11 26 10 27 13 26 27  0]xS 
1 Lw solid N 361 437 M 361 537 I 361 538 I 360 538 I 360 538 I 360 539 I 360 539 I 359 539 I 359 539 I 359 539 I 358 539 I 358 539 I 358 539 I 357 539 I 357 538 I 357 538 I 357 538 I 357 537 I 357 437 I 357 436 I 357 436 I 357 435 I 357 435 I 358 435 I 358 435 I 358 435 I 359 435 I 359 435 I 359 435 I 360 435 I 360 435 I 360 435 I 360 436 I 361 436 I 361 437 I 361 437 I C 
371 533 M 359 557 I 347 533 I 371 533 I C 
:  L ; K 
: 0 72 363 128 rc N 1 72 M 18 72 I 35 73 I 51 73 I 68 75 I 85 76 I 101 78 I 117 80 I 133 83 I 148 85 I 164 88 I 179 92 I 193 95 I 208 99 I 222 103 I 235 107 I 248 111 I 260 116 I 272 120 I 283 125 I 294 130 I 304 135 I 313 141 I 321 146 I 329 152 I 336 157 I 342 163 I 348 169 I 352 175 I 352 175 I 353 175 I 354 180 I 354 180 I 354 180 I 354 181 I 354 181 I 354 181 I 354 182 I 353 182 I 353 182 I 353 182 I 352 182 I 352 182 I 351 182 I 351 182 I 351 182 I 351 181 I 350 181 I 349 177 I 349 177 I 345 172 I 340 166 I 334 161 I 327 155 I 319 149 I 311 144 I 302 139 I 292 134 I 281 129 I 270 124 I 259 119 I 246 115 I 234 111 I 220 107 I 207 103 I 193 99 I 178 95 I 163 92 I 148 89 I 132 87 I 117 84 I 101 82 I 84 80 I 68 79 I 51 78 I 35 77 I 18 76 I 1 76 I 1 76 I 1 76 I 0 76 I 0 75 I 0 75 I 0 75 I -1 74 I -1 74 I -1 73 I 0 73 I 0 73 I 0 73 I 0 72 I 1 72 I 1 72 I 1 72 I 1 72 I C 
362 173 M 359 199 I 340 180 I 362 173 I C 
:  L ; K 
; N 1216 195 M 1209 195 I 1202 195 I 1194 195 I 1188 195 I 1181 196 I 1174 196 I 1167 197 I 1161 197 I 1154 198 I 1148 198 I 1142 199 I 1136 200 I 1131 201 I 1125 202 I 1120 203 I 1115 204 I 1113 204 I 1110 204 I 1108 205 I 1106 206 I 1104 206 I 1102 207 I 1100 207 I 1098 208 I 1096 209 I 1094 209 I 1092 210 I 1091 211 I 1089 211 I 1087 212 I 1086 212 I 1085 213 I 1083 214 I 1082 215 I 1081 215 I 1080 216 I 1079 217 I 1078 217 I 1077 218 I 1076 219 I 1076 219 I 1075 220 I 1074 221 I 1074 222 I 1074 223 I 1073 223 I 1073 224 I 1073 225 I 1073 406 I 1073 407 I 1073 408 I 1074 408 I 1074 409 I 1074 410 I 1075 411 I 1076 412 I 1076 412 I 1077 413 I 1078 414 I 1079 415 I 1080 415 I 1081 416 I 1082 417 I 1083 417 I 1085 418 I 1086 419 I 1087 419 I 1089 420 I 1091 421 I 1092 421 I 1094 422 I 1096 422 I 1098 423 I 1100 424 I 1102 424 I 1104 425 I 1106 425 I 1108 426 I 1110 427 I 1113 427 I 1115 428 I 1120 429 I 1125 430 I 1131 430 I 1136 431 I 1142 432 I 1148 433 I 1154 433 I 1161 434 I 1167 435 I 1174 435 I 1180 435 I 1188 436 I 1194 436 I 1202 436 I 1209 436 I 1216 436 I 1223 436 I 1231 436 I 1238 436 I 1245 436 I 1252 436 I 1259 435 I 1265 435 I 1272 434 I 1278 433 I 1284 433 I 1290 432 I 1296 431 I 1302 430 I 1307 430 I 1312 429 I 1317 428 I 1320 427 I 1322 427 I 1324 426 I 1327 425 I 1329 425 I 1331 424 I 1333 424 I 1335 423 I 1337 422 I 1339 422 I 1340 421 I 1342 421 I 1344 420 I 1345 419 I 1347 419 I 1348 418 I 1349 417 I 1350 417 I 1352 416 I 1353 415 I 1354 415 I 1355 414 I 1355 413 I 1356 412 I 1357 412 I 1358 411 I 1358 410 I 1358 409 I 1359 408 I 1359 408 I 1359 407 I 1359 406 I 1359 225 I 1359 224 I 1359 223 I 1359 223 I 1358 222 I 1358 221 I 1358 220 I 1357 219 I 1356 219 I 1355 218 I 1355 217 I 1354 217 I 1353 216 I 1352 215 I 1350 215 I 1349 214 I 1348 213 I 1347 212 I 1345 212 I 1344 211 I 1342 211 I 1340 210 I 1339 209 I 1337 209 I 1335 208 I 1333 207 I 1331 207 I 1329 206 I 1327 206 I 1324 205 I 1322 204 I 1320 204 I 1317 204 I 1312 203 I 1307 202 I 1302 201 I 1296 200 I 1290 199 I 1284 198 I 1278 198 I 1272 197 I 1265 197 I 1259 196 I 1252 196 I 1245 195 I 1238 195 I 1231 195 I 1223 195 I 1216 195 I 1216 195 I C 
1 0 scol  O N 1073 225 M 1073 226 I 1073 226 I 1074 227 I 1074 228 I 1074 229 I 1075 230 I 1076 230 I 1076 231 I 1077 232 I 1078 233 I 1079 233 I 1080 234 I 1081 235 I 1082 235 I 1083 236 I 1085 237 I 1086 237 I 1087 238 I 1089 239 I 1091 239 I 1092 240 I 1094 241 I 1096 241 I 1098 242 I 1100 242 I 1102 243 I 1104 244 I 1106 244 I 1108 245 I 1110 245 I 1113 246 I 1115 246 I 1120 247 I 1125 248 I 1131 249 I 1136 250 I 1142 251 I 1148 251 I 1154 252 I 1161 253 I 1167 253 I 1174 254 I 1180 254 I 1188 255 I 1194 255 I 1202 255 I 1209 255 I 1216 255 I 1223 255 I 1231 255 I 1238 255 I 1245 255 I 1252 254 I 1259 254 I 1265 253 I 1272 253 I 1278 252 I 1284 251 I 1290 251 I 1296 250 I 1302 249 I 1307 248 I 1312 247 I 1317 246 I 1320 246 I 1322 245 I 1324 245 I 1327 244 I 1329 244 I 1331 243 I 1333 242 I 1335 242 I 1337 241 I 1339 241 I 1340 240 I 1342 239 I 1344 239 I 1345 238 I 1347 237 I 1348 237 I 1349 236 I 1350 235 I 1352 235 I 1353 234 I 1354 233 I 1355 233 I 1355 232 I 1356 231 I 1357 230 I 1358 230 I 1358 229 I 1358 228 I 1359 227 I 1359 226 I 1359 226 I 1359 225 I 1359 224 I 1359 223 I 1359 223 I 1358 222 I 1358 221 I 1358 220 I 1357 219 I 1356 219 I 1355 218 I 1355 217 I 1354 217 I 1353 216 I 1352 215 I 1350 215 I 1349 214 I 1348 213 I 1347 212 I 1345 212 I 1344 211 I 1342 211 I 1340 210 I 1339 209 I 1337 209 I 1335 208 I 1333 207 I 1331 207 I 1329 206 I 1327 206 I 1324 205 I 1322 204 I 1320 204 I 1317 204 I 1312 203 I 1307 202 I 1302 201 I 1296 200 I 1290 199 I 1284 198 I 1278 198 I 1272 197 I 1265 197 I 1259 196 I 1252 196 I 1245 195 I 1238 195 I 1231 195 I 1223 195 I 1216 195 I 1209 195 I 1202 195 I 1194 195 I 1188 195 I 1181 196 I 1174 196 I 1167 197 I 1161 197 I 1154 198 I 1148 198 I 1142 199 I 1136 200 I 1131 201 I 1125 202 I 1120 203 I 1115 204 I 1113 204 I 1110 204 I 1108 205 I 1106 206 I 1104 206 I 1102 207 I 1100 207 I 1098 208 I 1096 209 I 1094 209 I 1092 210 I 1091 211 I 1089 211 I 1087 212 I 1086 212 I 1085 213 I 1083 214 I 1082 215 I 1081 215 I 1080 216 I 1079 217 I 1078 217 I 1077 218 I 1076 219 I 1076 219 I 1075 220 I 1074 221 I 1074 222 I 1074 223 I 1073 223 I 1073 224 I 1073 225 I C 
 O 0 0 scol 13 Lw solid N 1216 195 M 1209 195 I 1202 195 I 1194 195 I 1188 195 I 1181 196 I 1174 196 I 1167 197 I 1161 197 I 1154 198 I 1148 198 I 1142 199 I 1136 200 I 1131 201 I 1125 202 I 1120 203 I 1115 204 I 1113 204 I 1110 204 I 1108 205 I 1106 206 I 1104 206 I 1102 207 I 1100 207 I 1098 208 I 1096 209 I 1094 209 I 1092 210 I 1091 211 I 1089 211 I 1087 212 I 1086 212 I 1085 213 I 1083 214 I 1082 215 I 1081 215 I 1080 216 I 1079 217 I 1078 217 I 1077 218 I 1076 219 I 1076 219 I 1075 220 I 1074 221 I 1074 222 I 1074 223 I 1073 223 I 1073 224 I 1073 225 I 1073 406 I 1073 407 I 1073 408 I 1074 408 I 1074 409 I 1074 410 I 1075 411 I 1076 412 I 1076 412 I 1077 413 I 1078 414 I 1079 415 I 1080 415 I 1081 416 I 1082 417 I 1083 417 I 1085 418 I 1086 419 I 1087 419 I 1089 420 I 1091 421 I 1092 421 I 1094 422 I 1096 422 I 1098 423 I 1100 424 I 1102 424 I 1104 425 I 1106 425 I 1108 426 I 1110 427 I 1113 427 I 1115 428 I 1120 429 I 1125 430 I 1131 430 I 1136 431 I 1142 432 I 1148 433 I 1154 433 I 1161 434 I 1167 435 I 1174 435 I 1180 435 I 1188 436 I 1194 436 I 1202 436 I 1209 436 I 1216 436 I 1223 436 I 1231 436 I 1238 436 I 1245 436 I 1252 436 I 1259 435 I 1265 435 I 1272 434 I 1278 433 I 1284 433 I 1290 432 I 1296 431 I 1302 430 I 1307 430 I 1312 429 I 1317 428 I 1320 427 I 1322 427 I 1324 426 I 1327 425 I 1329 425 I 1331 424 I 1333 424 I 1335 423 I 1337 422 I 1339 422 I 1340 421 I 1342 421 I 1344 420 I 1345 419 I 1347 419 I 1348 418 I 1349 417 I 1350 417 I 1352 416 I 1353 415 I 1354 415 I 1355 414 I 1355 413 I 1356 412 I 1357 412 I 1358 411 I 1358 410 I 1358 409 I 1359 408 I 1359 408 I 1359 407 I 1359 406 I 1359 225 I 1359 224 I 1359 223 I 1359 223 I 1358 222 I 1358 221 I 1358 220 I 1357 219 I 1356 219 I 1355 218 I 1355 217 I 1354 217 I 1353 216 I 1352 215 I 1350 215 I 1349 214 I 1348 213 I 1347 212 I 1345 212 I 1344 211 I 1342 211 I 1340 210 I 1339 209 I 1337 209 I 1335 208 I 1333 207 I 1331 207 I 1329 206 I 1327 206 I 1324 205 I 1322 204 I 1320 204 I 1317 204 I 1312 203 I 1307 202 I 1302 201 I 1296 200 I 1290 199 I 1284 198 I 1278 198 I 1272 197 I 1265 197 I 1259 196 I 1252 196 I 1245 195 I 1238 195 I 1231 195 I 1223 195 I 1216 195 I 1216 195 I : 0.234 0.238 +S K 
; N 1073 225 M 1073 226 I 1073 226 I 1074 227 I 1074 228 I 1074 229 I 1075 230 I 1076 230 I 1076 231 I 1077 232 I 1078 233 I 1079 233 I 1080 234 I 1081 235 I 1082 235 I 1083 236 I 1085 237 I 1086 237 I 1087 238 I 1089 239 I 1091 239 I 1092 240 I 1094 241 I 1096 241 I 1098 242 I 1100 242 I 1102 243 I 1104 244 I 1106 244 I 1108 245 I 1110 245 I 1113 246 I 1115 246 I 1120 247 I 1125 248 I 1131 249 I 1136 250 I 1142 251 I 1148 251 I 1154 252 I 1161 253 I 1167 253 I 1174 254 I 1180 254 I 1188 255 I 1194 255 I 1202 255 I 1209 255 I 1216 255 I 1223 255 I 1231 255 I 1238 255 I 1245 255 I 1252 254 I 1259 254 I 1265 253 I 1272 253 I 1278 252 I 1284 251 I 1290 251 I 1296 250 I 1302 249 I 1307 248 I 1312 247 I 1317 246 I 1320 246 I 1322 245 I 1324 245 I 1327 244 I 1329 244 I 1331 243 I 1333 242 I 1335 242 I 1337 241 I 1339 241 I 1340 240 I 1342 239 I 1344 239 I 1345 238 I 1347 237 I 1348 237 I 1349 236 I 1350 235 I 1352 235 I 1353 234 I 1354 233 I 1355 233 I 1355 232 I 1356 231 I 1357 230 I 1358 230 I 1358 229 I 1358 228 I 1359 227 I 1359 226 I 1359 226 I 1359 225 I : 0.234 0.238 +S K 
; 1158 318 M (Legal)[27 26 26 27  0]xS 
1128 376 M (archives)[26 16 24 26 11 24 26  0]xS 
1 Lw solid : 1211 0 33 227 rc N 1229 1 M 1229 1 I 1229 2 I 1229 2 I 1229 3 I 1229 3 I 1229 4 I 1229 5 I 1229 7 I 1229 8 I 1229 9 I 1229 11 I 1229 13 I 1229 14 I 1229 14 I 1229 14 I 1229 15 I 1228 15 I 1228 15 I 1228 15 I 1228 15 I 1227 15 I 1227 15 I 1226 15 I 1226 15 I 1226 15 I 1226 15 I 1225 14 I 1225 14 I 1225 14 I 1225 13 I 1225 11 I 1225 9 I 1225 8 I 1225 7 I 1225 5 I 1225 4 I 1225 3 I 1225 3 I 1225 2 I 1225 2 I 1225 1 I 1225 1 I 1225 1 I 1225 1 I 1226 0 I 1226 0 I 1226 0 I 1226 0 I 1227 -1 I 1227 -1 I 1228 -1 I 1228 0 I 1228 0 I 1228 0 I 1229 0 I 1229 1 I 1229 1 I 1229 1 I 1229 1 I C 
1229 30 M 1229 31 I 1229 34 I 1229 37 I 1229 40 I 1229 42 I 1229 42 I 1229 43 I 1229 43 I 1228 43 I 1228 43 I 1228 44 I 1228 44 I 1227 44 I 1227 44 I 1226 44 I 1226 43 I 1226 43 I 1226 43 I 1225 43 I 1225 42 I 1225 42 I 1225 40 I 1225 37 I 1225 34 I 1225 31 I 1225 30 I 1225 29 I 1225 29 I 1226 29 I 1226 28 I 1226 28 I 1226 28 I 1227 28 I 1227 28 I 1228 28 I 1228 28 I 1228 28 I 1228 28 I 1229 29 I 1229 29 I 1229 29 I 1229 30 I 1229 30 I C 
1229 58 M 1229 61 I 1229 65 I 1229 70 I 1229 70 I 1229 71 I 1229 71 I 1228 71 I 1228 72 I 1228 72 I 1228 72 I 1227 72 I 1227 72 I 1226 72 I 1226 72 I 1226 71 I 1226 71 I 1225 71 I 1225 70 I 1225 70 I 1225 65 I 1225 61 I 1225 58 I 1225 57 I 1225 57 I 1226 57 I 1226 56 I 1226 56 I 1226 56 I 1227 56 I 1227 56 I 1228 56 I 1228 56 I 1228 56 I 1228 56 I 1229 57 I 1229 57 I 1229 57 I 1229 58 I 1229 58 I C 
1229 86 M 1229 90 I 1229 98 I 1229 98 I 1229 99 I 1229 99 I 1228 100 I 1228 100 I 1228 100 I 1228 100 I 1227 100 I 1227 100 I 1226 100 I 1226 100 I 1226 100 I 1226 99 I 1225 99 I 1225 98 I 1225 98 I 1225 90 I 1225 86 I 1225 86 I 1225 85 I 1226 85 I 1226 85 I 1226 84 I 1226 84 I 1227 84 I 1227 84 I 1228 84 I 1228 84 I 1228 84 I 1228 85 I 1229 85 I 1229 85 I 1229 86 I 1229 86 I 1229 86 I C 
1229 114 M 1229 117 I 1229 126 I 1229 127 I 1229 127 I 1229 127 I 1228 128 I 1228 128 I 1228 128 I 1228 128 I 1227 128 I 1227 128 I 1226 128 I 1226 128 I 1226 128 I 1226 127 I 1225 127 I 1225 127 I 1225 126 I 1225 117 I 1225 114 I 1225 114 I 1225 113 I 1226 113 I 1226 113 I 1226 112 I 1226 112 I 1227 112 I 1227 112 I 1228 112 I 1228 112 I 1228 112 I 1228 113 I 1229 113 I 1229 113 I 1229 114 I 1229 114 I 1229 114 I C 
1229 142 M 1229 146 I 1229 154 I 1229 155 I 1229 155 I 1229 156 I 1228 156 I 1228 156 I 1228 156 I 1228 156 I 1227 156 I 1227 156 I 1226 156 I 1226 156 I 1226 156 I 1226 156 I 1225 155 I 1225 155 I 1225 154 I 1225 146 I 1225 142 I 1225 142 I 1225 142 I 1226 141 I 1226 141 I 1226 141 I 1226 140 I 1227 140 I 1227 140 I 1228 140 I 1228 140 I 1228 141 I 1228 141 I 1229 141 I 1229 142 I 1229 142 I 1229 142 I 1229 142 I C 
1229 171 M 1229 177 I 1229 183 I 1229 183 I 1229 183 I 1229 184 I 1228 184 I 1228 184 I 1228 184 I 1228 185 I 1227 185 I 1227 185 I 1226 184 I 1226 184 I 1226 184 I 1226 184 I 1225 183 I 1225 183 I 1225 183 I 1225 177 I 1225 171 I 1225 170 I 1225 170 I 1226 169 I 1226 169 I 1226 169 I 1226 169 I 1227 168 I 1227 168 I 1228 168 I 1228 169 I 1228 169 I 1228 169 I 1229 169 I 1229 170 I 1229 170 I 1229 171 I 1229 171 I C 
1229 199 M 1229 209 I 1229 211 I 1229 211 I 1229 212 I 1229 212 I 1228 212 I 1228 212 I 1228 213 I 1228 213 I 1227 213 I 1227 213 I 1226 213 I 1226 212 I 1226 212 I 1226 212 I 1225 212 I 1225 211 I 1225 211 I 1225 209 I 1225 199 I 1225 198 I 1225 198 I 1226 198 I 1226 197 I 1226 197 I 1226 197 I 1227 197 I 1227 197 I 1228 197 I 1228 197 I 1228 197 I 1228 197 I 1229 198 I 1229 198 I 1229 198 I 1229 199 I 1229 199 I C 
1243 199 M 1227 226 I 1212 199 I 1211 199 I 1211 198 I 1211 198 I 1211 198 I 1212 197 I 1212 197 I 1212 197 I 1212 197 I 1213 196 I 1213 196 I 1213 196 I 1214 196 I 1214 196 I 1214 197 I 1215 197 I 1215 197 I 1229 221 I 1225 221 I 1239 197 I 1240 197 I 1240 197 I 1240 196 I 1241 196 I 1241 196 I 1241 196 I 1242 196 I 1242 197 I 1242 197 I 1243 197 I 1243 197 I 1243 198 I 1243 198 I 1243 198 I 1243 199 I 1243 199 I 1243 199 I C 
:  L ; K 
; N 1073 320 M 1050 320 I 1038 320 I 1038 311 I 1050 311 I 1073 311 I 1073 320 I C 
1011 320 M 1004 320 I 981 320 I 975 320 I 975 311 I 981 311 I 1004 311 I 1011 311 I 1011 320 I C 
948 320 M 939 320 I 929 321 I 920 321 I 913 321 I 913 311 I 920 311 I 929 311 I 939 311 I 948 311 I 948 320 I C 
886 321 M 885 321 I 877 321 I 870 321 I 863 321 I 856 321 I 850 321 I 850 321 I 850 312 I 850 312 I 856 312 I 862 312 I 869 312 I 877 312 I 885 312 I 886 312 I 886 321 I C 
824 321 M 824 321 I 824 321 I 822 321 I 820 321 I 818 322 I 815 322 I 811 322 I 807 322 I 802 322 I 796 322 I 790 322 I 788 322 I 788 313 I 790 313 I 796 313 I 802 313 I 807 313 I 811 313 I 814 313 I 818 313 I 820 313 I 822 313 I 822 313 I 822 313 I 823 313 I 824 321 I C 
761 322 M 754 322 I 745 322 I 736 322 I 727 322 I 725 322 I 725 313 I 727 313 I 736 313 I 745 313 I 754 313 I 761 313 I 761 322 I C 
698 322 M 697 322 I 687 322 I 665 322 I 662 323 I 662 313 I 665 313 I 687 313 I 697 313 I 698 313 I 698 322 I C 
636 323 M 620 323 I 600 323 I 600 313 I 620 313 I 636 313 I 636 323 I C 
607 338 M 573 318 I 607 298 I 607 298 I 608 298 I 609 298 I 610 298 I 611 298 I 612 299 I 612 299 I 613 300 I 613 301 I 613 302 I 613 303 I 613 303 I 613 304 I 612 305 I 612 306 I 611 306 I 584 322 I 584 314 I 611 330 I 612 331 I 612 331 I 613 332 I 613 333 I 613 334 I 613 335 I 613 335 I 613 336 I 612 337 I 612 338 I 611 338 I 610 338 I 609 338 I 608 338 I 607 338 I 607 338 I 607 338 I C 
:  L ; K 
N 1221 437 M 1221 442 I 1220 448 I 1219 454 I 1217 460 I 1215 466 I 1212 472 I 1211 473 I 1203 469 I 1204 468 I 1206 463 I 1208 458 I 1210 452 I 1211 447 I 1212 442 I 1212 436 I 1221 437 I C 
1196 497 M 1193 501 I 1188 506 I 1182 512 I 1177 517 I 1170 523 I 1170 523 I 1164 516 I 1165 516 I 1171 511 I 1176 505 I 1181 500 I 1186 495 I 1189 491 I 1196 497 I C 
1148 539 M 1142 544 I 1134 549 I 1126 554 I 1118 559 I 1113 551 I 1122 546 I 1129 541 I 1137 536 I 1143 532 I 1148 539 I C 
1094 572 M 1090 574 I 1081 579 I 1071 583 I 1062 587 I 1058 579 I 1067 575 I 1077 570 I 1086 566 I 1090 564 I 1094 572 I C 
1037 598 M 1028 601 I 1017 605 I 1003 611 I 1000 602 I 1014 597 I 1025 593 I 1033 589 I 1037 598 I C 
977 619 M 970 622 I 945 629 I 943 630 I 941 621 I 942 620 I 967 613 I 975 611 I 977 619 I C 
917 637 M 893 643 I 882 645 I 880 637 I 891 634 I 915 628 I 917 637 I C 
856 651 M 838 655 I 821 658 I 819 649 I 836 646 I 854 642 I 856 651 I C 
794 663 M 782 665 I 759 668 I 758 659 I 780 656 I 793 654 I 794 663 I C 
732 671 M 723 672 I 697 675 I 696 666 I 722 663 I 731 662 I 732 671 I C 
670 677 M 664 678 I 634 679 I 633 670 I 663 669 I 669 668 I 670 677 I C 
607 680 M 603 680 I 582 681 I 582 671 I 603 671 I 607 671 I 607 680 I C 
607 696 M 573 676 I 607 656 I 607 655 I 608 655 I 609 655 I 610 655 I 611 656 I 611 656 I 612 657 I 612 658 I 613 658 I 613 659 I 613 660 I 613 661 I 613 662 I 612 662 I 612 663 I 611 664 I 584 680 I 584 672 I 611 688 I 612 688 I 612 689 I 613 690 I 613 690 I 613 691 I 613 692 I 613 693 I 613 694 I 612 695 I 612 695 I 611 696 I 610 696 I 609 696 I 608 696 I 607 696 I 607 696 I 607 696 I C 
:  L ; K 
13 Lw solid : 0 0 1554 972 rc N 1 1 M 1 968 I 1550 968 I 1550 1 I C 
: 0.234 0.238 +S K 
; ; F0S30 Ji 
1056 941 M (Common Law Model)[34 29 42 43 29 29 13 29 27 38 13 40 29 29 26  0]xS 
1 Lw solid N 1360 315 M 1366 321 I 1367 322 I 1367 322 I 1366 323 I 1366 324 I 1366 324 I 1365 324 I 1365 324 I 1364 323 I 1358 317 I 1358 316 I 1358 316 I 1358 315 I 1358 314 I 1359 314 I 1359 314 I 1360 314 I 1360 315 I 1360 315 I C 
1374 330 M 1380 337 I 1380 337 I 1380 338 I 1380 338 I 1380 338 I 1380 339 I 1380 339 I 1380 340 I 1379 340 I 1379 340 I 1378 340 I 1378 339 I 1378 339 I 1372 332 I 1372 332 I 1372 332 I 1372 332 I 1372 331 I 1372 331 I 1372 330 I 1373 330 I 1373 330 I 1373 330 I 1374 330 I 1374 330 I 1374 330 I 1374 330 I 1374 330 I C 
1388 346 M 1394 353 I 1394 353 I 1394 354 I 1394 354 I 1394 355 I 1394 356 I 1393 356 I 1393 356 I 1393 356 I 1392 356 I 1392 356 I 1392 356 I 1391 355 I 1391 355 I 1386 348 I 1385 348 I 1385 347 I 1385 347 I 1386 346 I 1386 346 I 1387 346 I 1387 346 I 1388 346 I 1388 346 I C 
1401 363 M 1406 370 I 1407 370 I 1407 371 I 1407 371 I 1407 372 I 1406 372 I 1406 372 I 1405 372 I 1405 372 I 1404 372 I 1404 371 I 1399 365 I 1399 364 I 1399 364 I 1398 364 I 1398 364 I 1399 363 I 1399 363 I 1399 363 I 1400 362 I 1400 362 I 1401 363 I 1401 363 I 1401 363 I C 
1414 380 M 1419 387 I 1419 387 I 1419 388 I 1419 388 I 1419 389 I 1418 389 I 1418 390 I 1418 390 I 1417 390 I 1417 390 I 1417 389 I 1416 389 I 1416 389 I 1411 382 I 1411 381 I 1411 380 I 1411 380 I 1412 379 I 1412 379 I 1413 379 I 1413 379 I 1414 380 I 1414 380 I C 
1425 398 M 1427 401 I 1430 405 I 1430 406 I 1430 406 I 1430 407 I 1430 407 I 1429 408 I 1428 408 I 1428 407 I 1427 407 I 1425 403 I 1423 399 I 1423 399 I 1423 399 I 1422 398 I 1423 398 I 1423 397 I 1423 397 I 1424 397 I 1424 397 I 1424 397 I 1424 397 I 1425 397 I 1425 398 I 1425 398 I C 
1436 416 M 1439 421 I 1440 424 I 1440 424 I 1440 424 I 1440 425 I 1440 425 I 1440 425 I 1440 426 I 1439 426 I 1439 426 I 1439 426 I 1438 426 I 1438 426 I 1437 425 I 1436 422 I 1433 417 I 1433 417 I 1433 416 I 1433 415 I 1434 415 I 1435 415 I 1435 415 I 1435 415 I 1436 416 I 1436 416 I C 
1445 435 M 1446 437 I 1449 443 I 1449 443 I 1449 443 I 1449 444 I 1449 444 I 1449 444 I 1449 445 I 1448 445 I 1448 445 I 1448 445 I 1447 445 I 1447 445 I 1447 445 I 1446 444 I 1446 444 I 1444 438 I 1443 436 I 1443 436 I 1442 435 I 1443 435 I 1443 434 I 1443 434 I 1444 434 I 1444 434 I 1445 434 I 1445 434 I 1445 435 I 1445 435 I C 
1454 454 M 1456 460 I 1457 463 I 1457 463 I 1457 464 I 1456 464 I 1456 465 I 1455 465 I 1455 465 I 1454 464 I 1454 464 I 1453 461 I 1451 455 I 1451 455 I 1451 454 I 1451 454 I 1452 453 I 1452 453 I 1453 453 I 1453 454 I 1454 454 I 1454 454 I C 
1461 474 M 1462 480 I 1463 483 I 1463 483 I 1463 484 I 1463 484 I 1463 485 I 1462 485 I 1462 485 I 1461 485 I 1461 485 I 1461 484 I 1460 484 I 1459 481 I 1458 475 I 1458 474 I 1458 474 I 1458 473 I 1459 473 I 1459 473 I 1459 473 I 1460 473 I 1460 474 I 1461 474 I 1461 474 I C 
1466 495 M 1468 502 I 1468 504 I 1468 504 I 1468 505 I 1467 505 I 1467 505 I 1466 505 I 1466 505 I 1466 505 I 1465 504 I 1465 503 I 1463 495 I 1463 495 I 1463 494 I 1464 494 I 1464 494 I 1464 494 I 1465 494 I 1465 494 I 1466 494 I 1466 494 I 1466 495 I 1466 495 I C 
1471 516 M 1471 518 I 1472 524 I 1472 525 I 1472 525 I 1472 525 I 1472 525 I 1472 526 I 1471 526 I 1471 526 I 1471 526 I 1471 526 I 1470 526 I 1470 526 I 1470 525 I 1470 525 I 1470 525 I 1468 519 I 1468 516 I 1468 516 I 1468 515 I 1468 515 I 1469 514 I 1470 514 I 1470 515 I 1470 515 I 1471 516 I 1471 516 I C 
1475 536 M 1476 544 I 1476 545 I 1476 546 I 1476 546 I 1476 546 I 1476 547 I 1475 547 I 1475 547 I 1474 547 I 1474 547 I 1473 546 I 1473 546 I 1473 546 I 1473 544 I 1472 537 I 1472 536 I 1472 536 I 1472 535 I 1472 535 I 1473 535 I 1473 535 I 1474 535 I 1474 536 I 1475 536 I 1475 536 I 1475 536 I C 
1478 557 M 1480 566 I 1479 567 I 1479 567 I 1479 568 I 1478 568 I 1478 568 I 1477 568 I 1477 567 I 1477 567 I 1475 558 I 1475 557 I 1476 556 I 1476 556 I 1476 556 I 1477 556 I 1477 556 I 1477 556 I 1478 557 I 1478 557 I 1478 557 I C 
1481 578 M 1483 587 I 1483 588 I 1482 588 I 1482 589 I 1481 589 I 1481 589 I 1480 589 I 1480 588 I 1480 588 I 1478 579 I 1478 578 I 1478 578 I 1479 577 I 1479 577 I 1479 577 I 1480 577 I 1480 577 I 1480 577 I 1481 577 I 1481 577 I 1481 578 I 1481 578 I 1481 578 I C 
1485 599 M 1485 604 I 1486 608 I 1486 609 I 1486 609 I 1485 609 I 1485 610 I 1484 610 I 1484 610 I 1483 609 I 1483 609 I 1483 608 I 1482 605 I 1482 599 I 1482 599 I 1482 598 I 1482 598 I 1482 598 I 1483 598 I 1483 597 I 1483 598 I 1484 598 I 1484 598 I 1485 599 I 1485 599 I C 
1488 620 M 1488 621 I 1489 629 I 1489 629 I 1489 629 I 1489 630 I 1488 630 I 1488 631 I 1487 630 I 1486 630 I 1486 630 I 1486 629 I 1485 622 I 1485 620 I 1485 620 I 1485 619 I 1485 619 I 1486 619 I 1486 619 I 1486 619 I 1486 619 I 1487 619 I 1487 619 I 1488 620 I 1488 620 I C 
1491 641 M 1492 645 I 1492 650 I 1492 650 I 1492 650 I 1492 650 I 1492 651 I 1491 651 I 1491 651 I 1491 651 I 1491 651 I 1491 651 I 1490 651 I 1490 651 I 1489 650 I 1489 646 I 1488 641 I 1488 640 I 1488 640 I 1489 640 I 1489 640 I 1489 640 I 1489 639 I 1490 640 I 1490 640 I 1491 640 I 1491 641 I 1491 641 I C 
1494 662 M 1495 667 I 1496 670 I 1496 671 I 1496 671 I 1496 671 I 1496 671 I 1495 672 I 1495 672 I 1495 672 I 1494 672 I 1494 672 I 1493 671 I 1493 671 I 1493 671 I 1492 668 I 1491 662 I 1491 662 I 1492 661 I 1492 661 I 1492 660 I 1493 660 I 1493 660 I 1494 661 I 1494 661 I 1494 662 I 1494 662 I C 
1498 682 M 1499 684 I 1499 686 I 1500 689 I 1501 691 I 1501 691 I 1501 691 I 1500 692 I 1500 692 I 1499 693 I 1499 693 I 1499 693 I 1498 693 I 1498 693 I 1498 692 I 1498 692 I 1498 692 I 1497 690 I 1496 687 I 1496 684 I 1496 683 I 1496 682 I 1496 682 I 1496 681 I 1496 681 I 1497 681 I 1497 681 I 1497 681 I 1498 681 I 1498 682 I 1498 682 I 1498 682 I C 
1504 702 M 1505 706 I 1506 710 I 1507 711 I 1507 711 I 1507 712 I 1507 712 I 1507 712 I 1506 713 I 1506 713 I 1505 713 I 1505 713 I 1504 713 I 1504 712 I 1504 712 I 1504 711 I 1502 707 I 1501 704 I 1501 703 I 1501 702 I 1501 702 I 1502 702 I 1502 701 I 1503 702 I 1503 702 I 1504 702 I 1504 702 I C 
1511 722 M 1512 724 I 1514 727 I 1515 730 I 1516 730 I 1516 730 I 1516 731 I 1516 731 I 1515 732 I 1515 732 I 1515 732 I 1514 732 I 1514 732 I 1513 732 I 1513 731 I 1513 731 I 1511 728 I 1510 725 I 1509 723 I 1509 723 I 1509 722 I 1509 721 I 1509 721 I 1510 721 I 1511 721 I 1511 721 I 1511 722 I 1511 722 I C 
1522 739 M 1523 740 I 1524 741 I 1526 742 I 1527 743 I 1528 744 I 1529 745 I 1529 745 I 1530 746 I 1530 746 I 1530 746 I 1530 747 I 1529 747 I 1529 747 I 1528 748 I 1528 748 I 1528 748 I 1528 748 I 1527 747 I 1527 747 I 1525 746 I 1524 745 I 1522 743 I 1521 742 I 1520 741 I 1520 741 I 1520 741 I 1520 741 I 1520 740 I 1520 740 I 1520 739 I 1521 739 I 1521 739 I 1522 739 I 1522 739 I 1522 739 I C 
1540 749 M 1541 749 I 1544 749 I 1547 749 I 1548 749 I 1548 749 I 1549 749 I 1549 749 I 1550 750 I 1550 751 I 1550 751 I 1549 752 I 1549 752 I 1548 752 I 1548 752 I 1547 752 I 1544 752 I 1541 752 I 1539 752 I 1538 751 I 1538 751 I 1538 750 I 1538 750 I 1538 749 I 1538 749 I 1539 749 I 1540 749 I 1540 749 I C 
:  L ; K 
13 Lw solid N 359 799 M 359 809 I 360 818 I 361 828 I 361 833 I 361 837 I 361 842 I 361 847 I 361 851 I 361 855 I 360 859 I 360 864 I 359 868 I 359 872 I 358 873 I 358 875 I 358 879 I 357 883 I 357 886 I 357 890 I 357 894 I 356 897 I 356 899 I 356 900 I 355 902 I 355 903 I 354 905 I 354 906 I 353 908 I 352 909 I 351 910 I 350 912 I 349 913 I 347 914 I 345 915 I 344 916 I 342 917 I 340 918 I 337 919 I 335 920 I 334 920 I 332 920 I 331 921 I 329 921 I 327 921 I 326 921 I 324 922 I 322 922 I 319 922 I 314 922 I 310 922 I 306 922 I 301 922 I 297 922 I 292 922 I 287 921 I 282 921 I 277 921 I 266 920 I 256 919 I 246 918 I 240 918 I 235 918 I 230 918 I 225 917 I 221 917 I 216 917 I 212 917 I 207 918 I 203 918 I 199 918 I 197 919 I 195 919 I 194 919 I 192 920 I 189 921 I 185 921 I 182 922 I 179 923 I 176 924 I 174 925 I 171 927 I 168 928 I 166 929 I 163 931 I 161 932 I 158 933 I 156 935 I 154 936 I 149 939 I 145 943 I 142 946 I 138 950 I 134 953 I 131 957 I 127 960 I 121 968 I : 0.234 0.238 +S K 
; 1 Lw solid : 0 459 169 99 rc N 2 459 M 14 460 I 27 462 I 33 463 I 39 464 I 46 465 I 52 466 I 58 468 I 64 469 I 70 471 I 76 473 I 81 475 I 87 478 I 92 480 I 98 483 I 103 486 I 108 490 I 113 494 I 118 497 I 122 502 I 127 506 I 132 510 I 136 515 I 141 520 I 145 525 I 149 530 I 153 535 I 157 540 I 157 541 I 158 541 I 158 541 I 158 542 I 158 542 I 157 542 I 157 543 I 157 543 I 157 543 I 156 544 I 156 544 I 156 544 I 155 544 I 155 543 I 155 543 I 154 543 I 150 538 I 146 533 I 142 528 I 137 523 I 133 518 I 129 513 I 124 509 I 120 505 I 115 501 I 111 497 I 106 493 I 101 490 I 96 487 I 91 484 I 85 481 I 80 479 I 74 477 I 69 475 I 63 473 I 57 472 I 51 470 I 45 469 I 39 468 I 33 467 I 26 466 I 14 464 I 1 463 I 1 463 I 0 462 I 0 462 I 0 462 I 0 462 I 0 461 I -1 461 I 0 460 I 0 460 I 0 459 I 0 459 I 0 459 I 1 459 I 1 459 I 1 459 I 2 459 I 2 459 I C 
163 531 M 168 557 I 144 546 I 163 531 I C 
:  L ; K 
; N 1 676 M 13 676 I 14 676 I 14 676 I 14 677 I 15 677 I 15 677 I 15 677 I 15 678 I 15 678 I 15 678 I 15 679 I 15 679 I 15 680 I 14 680 I 14 680 I 14 680 I 13 680 I 1 680 I 1 680 I 1 680 I 0 680 I 0 680 I 0 679 I 0 679 I 0 678 I 0 678 I 0 678 I 0 677 I 0 677 I 0 677 I 0 677 I 1 676 I 1 676 I 1 676 I 1 676 I C 
29 676 M 41 676 I 41 676 I 42 676 I 42 677 I 42 677 I 43 677 I 43 677 I 43 678 I 43 678 I 43 678 I 43 679 I 43 679 I 42 680 I 42 680 I 42 680 I 41 680 I 41 680 I 29 680 I 29 680 I 28 680 I 28 680 I 28 680 I 28 679 I 27 679 I 27 678 I 27 678 I 27 678 I 27 677 I 28 677 I 28 677 I 28 677 I 28 676 I 29 676 I 29 676 I 29 676 I C 
57 676 M 69 676 I 69 676 I 70 676 I 70 677 I 70 677 I 71 677 I 71 677 I 71 678 I 71 678 I 71 678 I 71 679 I 71 679 I 70 680 I 70 680 I 70 680 I 69 680 I 69 680 I 57 680 I 56 680 I 56 680 I 56 680 I 56 680 I 55 679 I 55 679 I 55 678 I 55 678 I 55 678 I 55 677 I 55 677 I 56 677 I 56 677 I 56 676 I 56 676 I 57 676 I 57 676 I C 
85 676 M 97 676 I 97 676 I 97 676 I 98 677 I 98 677 I 98 677 I 98 677 I 99 678 I 99 678 I 99 678 I 98 679 I 98 679 I 98 680 I 98 680 I 97 680 I 97 680 I 97 680 I 85 680 I 84 680 I 84 680 I 84 680 I 83 680 I 83 679 I 83 679 I 83 678 I 83 678 I 83 678 I 83 677 I 83 677 I 83 677 I 84 677 I 84 676 I 84 676 I 85 676 I 85 676 I C 
113 676 M 125 676 I 125 676 I 125 676 I 126 677 I 126 677 I 126 677 I 126 677 I 126 678 I 127 678 I 126 678 I 126 679 I 126 679 I 126 680 I 126 680 I 125 680 I 125 680 I 125 680 I 113 680 I 112 680 I 112 680 I 112 680 I 111 680 I 111 679 I 111 679 I 111 678 I 111 678 I 111 678 I 111 677 I 111 677 I 111 677 I 112 677 I 112 676 I 112 676 I 113 676 I 113 676 I C 
114 662 M 140 678 I 114 694 I 113 694 I 113 694 I 112 694 I 112 694 I 112 694 I 111 694 I 111 693 I 111 693 I 111 692 I 111 692 I 111 692 I 111 691 I 111 691 I 111 691 I 112 691 I 135 677 I 135 680 I 112 666 I 111 666 I 111 665 I 111 665 I 111 665 I 111 664 I 111 664 I 111 663 I 111 663 I 111 663 I 111 662 I 112 662 I 112 662 I 112 662 I 113 662 I 113 662 I 114 662 I 114 662 I C 
:  L ; K 
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer
%%BoundingBox: 18 550 391 784
%%DocumentNeededResources: 
%%+ font Helvetica-Bold
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF
